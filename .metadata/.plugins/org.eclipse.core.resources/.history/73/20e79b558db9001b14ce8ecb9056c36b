import java.util.*;
import java.math.*;
import java.util.Map.Entry;
public class Misc
{
    public static void main(String[] args)
    {
        Scanner in = new Scanner(System.in);
        String s = in.next();
        int start = 0;
        int end = 0;
        for(int i = 0;i<s.length();i++) {
        	int len1 = expand(s,i,i);
        	int len2 = expand(s,i,i+1);
        	int len = Math.max(len1, len2);
        	if(len > (end - start)) {
        		start = i + (len/2) + 1;
        		end = (len / 2) + 1;
        	}
        }
        System.out.println(s.substring(start,end+1));
    }
    public static int expand(String s, int i , int j) {
    	int low = i;
    	int high = j;
    	while(i>= 0 && j <s.length() && s.charAt(i) == s.charAt(j)) {
    		i--;
    		j++;
    	}
    	return j - i + 1;
    }
}


class Node{
	LinkedList[] adj;
	int v;
	public Node(int v) {
		this.v = v;
		adj = new LinkedList[v];
		for(int i = 0;i<v;i++) {
			adj[i] = new LinkedList<Integer>();
		}
	}
	
	public void addEdge(int s, int d) {
		adj[s].add(d);
	}
	
}


























