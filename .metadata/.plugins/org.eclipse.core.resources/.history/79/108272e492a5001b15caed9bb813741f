import java.io.*;
import java.util.*;
public class Misc {
	
	static Set<Integer> st = new TreeSet<>();
	public static int nearSmall(int n) {
		ArrayList<Integer> prime = new ArrayList<>(st);
		int low = 0;
		int ans = 0;
		int min = Integer.MAX_VALUE;
		int high = prime.size();
		while(low<=high) {
			int mid = (low + high) / 2;
			if(prime.get(mid) == n) {
				return prime.get(mid);
			}
			if(prime.get(mid) < n) {
				low = mid + 1;
			}
			if(prime.get(mid) > n) {
				high = mid - 1;
			}
			if(Math.abs(prime.get(mid) - n) < min && prime.get(mid) < n) {
				ans = prime.get(mid);
			}
		}
		return ans;
	}

    public static void main(String[] arga) {
         Scanner in = new Scanner(System.in);
         long t = in.nextLong();
         while(t-->0) {
             int n  = in.nextInt();
             ArrayList<Integer> list = new ArrayList<>();
             for(int i = 0;i<n;i++) {
            	 int e = in.nextInt();
            	 list.add(e);
            	 st.add(e);
             }
             int q = in.nextInt();
             while(q-->0) {
            	 int num = in.nextInt();
            	 System.out.println(nearSmall(num)+1);
             }
         }
    }
}